openapi: 3.0.3
info:
  title: User API
  description: API for creating and retrieving users
  version: 1.0.0
servers:
  - url: https://localhost:8080
    description: Localhost server
paths:
  /users:
    post:
      summary: Create a new user
      operationId: createUser
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Bad request
        '500':
          description: Server error

    get:
      summary: Get all users
      operationId: getUsers
      tags:
        - Users
      responses:
        '200':
          description: List of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '500':
          description: Server error

  /users/{email}:
    get:
      summary: Get a user by email
      operationId: getUser
      tags:
        - Users
      parameters:
        - $ref: '#/components/parameters/Email'
      responses:
        '200':
          description: User found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found
        '500':
          description: Server error

    delete:
      summary: Delete a user by email
      operationId: deleteUser
      tags:
        - Users
      parameters:
        - $ref: '#/components/parameters/Email'
      responses:
        '204':
          description: User deleted successfully
        '404':
          description: User not found
        '500':
          description: Server error

    patch:
      summary: Update a user by Email
      operationId: updateUser
      tags:
        - Users
      parameters:
        - $ref: '#/components/parameters/Email'
      requestBody:
        required: true
        content:
          application/json-patch+json:
            schema:
              $ref: 'https://json.schemastore.org/json-patch'
      responses:
        '200':
          description: User updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found
        '400':
          description: Invalid request
        '500':
          description: Server error

components:
  parameters:
    Email:
      example: 'johndoe@gmail.com'
      name: email
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/Email'

  schemas:
    Email:
      type: string
      pattern: '^[\w-\.]+@([\w-]+\.)+[\w-]{2,4}$'
      example: 'johndoe@gmail.com'
    User:
      type: object
      properties:
        first_name:
          type: string
          pattern: '^[A-Za-z]{1,50}$'
          example: John
        last_name:
          type: string
          pattern: '^[A-Za-z]{1,50}$'
          example: Doe
        phone:
          type: string
          pattern: '^\+?[1-9]\d{1,14}$'
          example: '+1234567890'
        email:
          $ref: '#/components/schemas/Email'
      required:
        - first_name
        - last_name
        - phone
        - email
